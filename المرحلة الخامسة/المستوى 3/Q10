لإضافة واجهة رسومية (GUI) باستخدام HTML و CSS لتمكين المستخدم من التفاعل مع التطبيق، يجب أولاً تصميم هيكل الصفحة باستخدام HTML، ثم تحسين الشكل والتنسيق باستخدام CSS. إليك الخطوات الأساسية لإنشاء واجهة رسومية تفاعلية:

1. هيكل الصفحة باستخدام HTML

ابدأ بإنشاء العناصر الأساسية التي تحتاج إليها في واجهتك الرسومية مثل الأزرار، النماذج، الحقول النصية، إلخ.

<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>واجهة المستخدم</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>مرحبًا بك في التطبيق</h1>
        <form id="userForm">
            <label for="name">الاسم:</label>
            <input type="text" id="name" name="name" placeholder="أدخل اسمك">
            
            <label for="email">البريد الإلكتروني:</label>
            <input type="email" id="email" name="email" placeholder="أدخل بريدك الإلكتروني">
            
            <button type="submit">إرسال</button>
        </form>
    </div>
</body>
</html>

2. تنسيق الصفحة باستخدام CSS

استخدم CSS لتحسين مظهر الصفحة وجعلها أكثر تفاعلية وجاذبية. قم بتنسيق الألوان، الأبعاد، والخطوط لجعل واجهتك سهلة الاستخدام.

/* styles.css */

body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.container {
    background-color: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: 300px;
    text-align: center;
}

h1 {
    color: #333;
}

label {
    display: block;
    margin: 10px 0 5px;
    text-align: right;
    color: #555;
}

input[type="text"], input[type="email"] {
    width: 100%;
    padding: 10px;
    margin: 5px 0;
    border-radius: 5px;
    border: 1px solid #ddd;
}

button {
    background-color: #4CAF50;
    color: white;
    padding: 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    width: 100%;
}

button:hover {
    background-color: #45a049;
}

3. التفاعل مع المستخدم باستخدام JavaScript (اختياري)

لجعل واجهتك تفاعلية بشكل أكبر، يمكنك استخدام JavaScript لإضافة وظيفة إلى الأزرار، مثل التحقق من صحة المدخلات أو إجراء العمليات عند إرسال البيانات.

<script>
    document.getElementById("userForm").addEventListener("submit", function(event) {
        event.preventDefault(); // منع الإرسال الفعلي للنموذج
        let name = document.getElementById("name").value;
        let email = document.getElementById("email").value;

        if (name && email) {
            alert(تم إرسال البيانات بنجاح!\nالاسم: ${name}\nالبريد الإلكتروني: ${email});
        } else {
            alert("يرجى ملء جميع الحقول.");
        }
    });
</script>

النتيجة:

باستخدام هذه الطريقة، يمكنك تصميم واجهة رسومية بسيطة للتفاعل مع المستخدم باستخدام HTML و CSS. إذا كنت ترغب في إضافة مزيد من التفاعل مثل الرسوم المتحركة أو التأثيرات، يمكن إضافة المزيد من الخصائص باستخدام CSS أو JavaScript.