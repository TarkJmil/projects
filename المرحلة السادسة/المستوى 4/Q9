9. التنظيف والتحويل:

1. تحويل أنواع البيانات في DataFrame من نوع إلى آخر:

في Pandas، يمكننا تحويل أنواع البيانات في الأعمدة باستخدام دالة astype() أو باستخدام دالة pd.to_datetime() لتحويل الأعمدة النصية إلى تواريخ، على سبيل المثال:

تحويل الأعمدة من نصوص إلى تواريخ: إذا كان لدينا عمود يحتوي على تواريخ بصيغة نصية، يمكننا تحويله إلى نوع البيانات datetime باستخدام pd.to_datetime().

مثال:

import pandas as pd

# إنشاء DataFrame مثال
data = {'date_column': ['2021-03-01', '2021-04-15', '2021-05-20']}
df = pd.DataFrame(data)

# تحويل العمود من نص إلى تاريخ
df['date_column'] = pd.to_datetime(df['date_column'])

# عرض النتيجة
print(df)

في هذا المثال، نستخدم pd.to_datetime() لتحويل النصوص إلى تواريخ.

استخدام astype() لتحويل نوع البيانات: يمكن استخدام astype() لتحويل نوع البيانات لأي عمود. على سبيل المثال، لتحويل عمود إلى نوع بيانات عدد صحيح أو عشري:

# تحويل العمود إلى عدد صحيح
df['numeric_column'] = df['numeric_column'].astype(int)

# تحويل العمود إلى عدد عشري
df['numeric_column'] = df['numeric_column'].astype(float)


2. استخدام التعبيرات العادية (regex) لتنظيف البيانات النصية:

التعبيرات العادية (regex) هي أداة قوية للتعامل مع البيانات النصية في Pandas. يمكنك استخدامها للبحث عن نمط معين في البيانات النصية أو لتعديل هذه البيانات. يتم استخدام دالة str.replace() أو str.extract() مع التعبيرات العادية.

تنظيف النصوص باستخدام str.replace() مع regex: على سبيل المثال، إذا كنت ترغب في إزالة جميع الأرقام من النصوص، يمكنك استخدام التعبيرات العادية:

df['text_column'] = df['text_column'].str.replace(r'\d+', '', regex=True)

في هذا المثال، \d+ هو تعبير عادي يُطابق أي رقم (واحد أو أكثر) ويتم استبداله بسلسلة فارغة.

استخراج الأنماط باستخدام str.extract() مع regex: إذا كنت ترغب في استخراج جزء معين من النصوص بناءً على نمط معين (مثل استخراج التواريخ أو الأرقام)، يمكنك استخدام str.extract():

df['date_extracted'] = df['text_column'].str.extract(r'(\d{4}-\d{2}-\d{2})')

هنا نستخدم تعبيرًا عاديًا لاستخراج التواريخ التي تتبع نمط YYYY-MM-DD.

استخدام str.contains() لاكتشاف الأنماط: إذا كنت تريد تحديد ما إذا كانت النصوص تحتوي على نمط معين، يمكن استخدام str.contains():

df['contains_number'] = df['text_column'].str.contains(r'\d', regex=True)

في هذا المثال، str.contains() تتحقق مما إذا كان النص يحتوي على أي رقم.


الخلاصة:

لتحويل أنواع البيانات في Pandas، يمكن استخدام astype() و pd.to_datetime().

لتنظيف البيانات النصية باستخدام التعبيرات العادية، يمكننا استخدام دوال مثل str.replace()، str.extract()، و str.contains() مع regex.