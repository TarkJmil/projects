1. رسم مخطط هيستوغرام مع تمثيل التوزيع الاحتمالي باستخدام Matplotlib

لرسم مخطط هيستوغرام (Histogram) مع تمثيل التوزيع الاحتمالي، نستخدم مكتبة Matplotlib جنبًا إلى جنب مع مكتبة Seaborn أو مكتبة SciPy لتمثيل منحنى التوزيع الاحتمالي.

مثال عملي باستخدام Matplotlib و Seaborn

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import norm

# توليد بيانات عشوائية تتبع التوزيع الطبيعي
data = np.random.randn(1000)

# رسم الهيستوغرام
plt.figure(figsize=(8, 5))
sns.histplot(data, bins=30, kde=True, stat="density", color='skyblue', edgecolor='black')

# رسم منحنى التوزيع الاحتمالي
xmin, xmax = plt.xlim()
x = np.linspace(xmin, xmax, 100)
p = norm.pdf(x, np.mean(data), np.std(data))
plt.plot(x, p, 'r', linewidth=2, label="التوزيع الاحتمالي")

# تخصيص الرسم
plt.xlabel("القيم")
plt.ylabel("الكثافة الاحتمالية")
plt.title("الهيستوغرام مع منحنى التوزيع الاحتمالي")
plt.legend()
plt.show()

تحليل الكود:

1. إنشاء بيانات عشوائية تتبع التوزيع الطبيعي باستخدام np.random.randn(1000).


2. رسم الهيستوغرام باستخدام sns.histplot() مع تفعيل kde=True لتمثيل منحنى التوزيع باستخدام Seaborn.


3. رسم منحنى التوزيع الاحتمالي باستخدام scipy.stats.norm.pdf().


4. إضافة تحسينات مثل العناوين والمحاور والتسمية.




---

2. رسم مخطط Boxplot باستخدام Seaborn لبيانات تحتوي على قيم شاذة

Boxplot (المخطط الصندوقي) هو أداة إحصائية تساعد في عرض توزيع البيانات، بما في ذلك القيم المتطرفة (الشاذة). يتم تمثيل القيم المتطرفة كنقاط خارج نطاق الصندوق.

مثال عملي باستخدام Seaborn

import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# إنشاء بيانات تحتوي على قيم شاذة
data = np.append(np.random.randn(100), [5, 6, -4.5, -6])  # إضافة قيم شاذة

# رسم Boxplot
plt.figure(figsize=(6, 4))
sns.boxplot(data=data, color="lightblue", width=0.3)

# تخصيص الرسم
plt.xlabel("المتغير")
plt.title("مخطط Boxplot مع القيم الشاذة")
plt.show()

تحليل الكود:

1. توليد بيانات طبيعية باستخدام np.random.randn(100).


2. إضافة قيم شاذة مثل [5, 6, -4.5, -6] إلى البيانات.


3. رسم المخطط الصندوقي باستخدام sns.boxplot().


4. تحسينات الرسم مثل تغيير اللون وإضافة العناوين.




---

فوائد مخطط Boxplot:

1. الكشف عن القيم الشاذة بسهولة، حيث تظهر كنقاط منفصلة خارج الصندوق.


2. فهم توزيع البيانات من خلال عرض المدى الربيعي (IQR) والوسيط.


3. المقارنة بين المجموعات عند تطبيق المخطط على أكثر من فئة من البيانات.


4. تحديد مدى التشتت للبيانات بوضوح.



الخلاصة:

الهيستوغرام يُستخدم لفهم توزيع البيانات بشكل عام وتمثيله بيانيًا.

Boxplot مفيد في تحديد القيم الشاذة والتوزيع الإحصائي بطريقة مضغوطة وسهلة القراءة.


بهذه الطريقة، يمكنك استخدام Matplotlib و Seaborn لإنشاء تصورات بيانية قوية تساعدك في تحليل البيانات بشكل أكثر دقة.